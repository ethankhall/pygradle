plugins {
    id 'idea'
    id 'application'
    id "com.github.jk1.dependency-license-report" version "0.3.4"
    id "com.github.hierynomus.license" version "0.13.1"
    id "com.github.johnrengelman.shadow" version "2.0.2"
    id "org.jetbrains.kotlin.jvm" version "1.2.30"
}

apply from: "$rootDir/gradle/code-quality.gradle"
apply from: "$rootDir/gradle/publishing.gradle"

mainClassName = 'com.linkedin.pivy.ImporterCLI'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile project(':pypi-parser')
    compile 'com.beust:jcommander:1.72'
//    compile 'commons-cli:commons-cli:1.3.1'
    compile 'ch.qos.logback:logback-classic:1.1.3'
    compile 'org.jetbrains.kotlin:kotlin-stdlib:1.2.30'
    compile 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.2.30'
    compile 'com.squareup.okhttp3:okhttp:3.10.0'
    compile 'org.redundent:kotlin-xml-builder:1.4'
    compile 'com.squareup.okhttp3:logging-interceptor:3.10.0'

    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
}

task setupTestingIvyRepo

def getIvyRepo() {
    return file("${rootProject.getBuildDir()}/ivy-repo")
}

task importRequiredDependencies(type: JavaExec) { task ->
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.linkedin.pivy.ImporterCLI'

    def versions = [
        'pytz==2016.4',
        'PyYAML==3.12',
        'setuptools==33.1.1',
        'flake8==2.6.2',
        'Flask==0.12.2',
        'pbr==1.8.0',
        'pex==1.2.13',
        'pip==9.0.1',
        'pytest==3.1.2',
        'pytest-cov==2.5.1',
        'pytest-xdist==1.17.1',
        'requests==2.18.1',
        'setuptools==33.1.1',
        'setuptools-git==1.2',
        'six==1.11.0',
        'Sphinx==1.4.9',
        'virtualenv==15.1.0',
        'wheel==0.29.0',
        'pyflakes==1.6.0',
        "pycodestyle==2.3.1",
        "mccabe==0.6.1",
        "Werkzeug==0.14.1",
        "Jinja2==2.10",
        "itsdangerous==0.24",
        "click==6.7",
        "py==1.5.3",
        "coverage==4.5.1",
        "execnet==1.5.0",
        "chardet==3.0.4",
        "idna==2.6",
        "urllib3==1.22",
        "certifi==2018.1.18",
        "Pygments==2.2.0",
        "docutils==0.14",
        "snowballstemmer==1.2.1",
        "Babel==2.5.3",
        "alabaster==0.7.10",
        "imagesize==1.0.0",
        "MarkupSafe==1.0",
        "apipkg==1.4"
    ].join(",")
    def packagesToInclude = [
        'flake8',
        'Flask',
        'pbr',
        'pex',
        'pip',
        'pytest',
        'pytest-cov',
        'pytest-xdist',
        'requests',
        'setuptools',
        'setuptools-git',
        'six',
        'Sphinx',
        'virtualenv',
        'wheel',
    ].join(",")
    args '-d'
    args '--require-all-versions'
    args "--repo ${getIvyRepo().absolutePath}".split(" ")
    args "--cache ${new File(gradle.gradleUserHomeDir, "pypi-cache").absolutePath}".split(' ')
    args "--version-overrides $versions".split(' ')
    args packagesToInclude

    outputs.dir(getIvyRepo())
    inputs.property('packages', packagesToInclude)
    setupTestingIvyRepo.dependsOn(task)

    doFirst {
        file(getIvyRepo()).mkdir()
    }
}

license {
    header rootProject.file('codequality/HEADER')
    exclude '**/*.template'
}

licenseReport {
    configurations = ['compile', 'testCompile']
}

publishing.publications.standardjava {
    artifact shadowJar {
        classifier "all"
    }

    artifact distZip {
        classifier "all"
    }
}

assemble.dependsOn shadowJar
artifactoryPublish.dependsOn shadowJar
build.dependsOn shadowJar
